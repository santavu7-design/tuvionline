import React from 'react';
import {
  View,
  StyleSheet,
  ScrollView,
} from 'react-native';
import {
  Text,
  Card,
  Title,
  Paragraph,
  Button,
  List,
} from 'react-native-paper';

const ServicesScreen: React.FC = () => {
  const services = [
    {
      id: 1,
      title: 'B√≥i to√°n h√†ng ng√†y',
      description: 'Xem v·∫≠n m·ªánh ng√†y h√¥m nay d·ª±a tr√™n l√° s·ªë t·ª≠ vi c·ªßa b·∫°n',
      icon: 'üìÖ',
      status: 'available',
    },
    {
      id: 2,
      title: 'B√≥i to√°n tu·∫ßn',
      description: 'D·ª± ƒëo√°n v·∫≠n m·ªánh trong tu·∫ßn t·ªõi',
      icon: 'üìä',
      status: 'coming_soon',
    },
    {
      id: 3,
      title: 'B√≥i to√°n th√°ng',
      description: 'Ph√¢n t√≠ch v·∫≠n m·ªánh theo th√°ng',
      icon: 'üìà',
      status: 'coming_soon',
    },
    {
      id: 4,
      title: 'B√≥i to√°n nƒÉm',
      description: 'D·ª± ƒëo√°n v·∫≠n m·ªánh c·∫£ nƒÉm',
      icon: 'üéØ',
      status: 'coming_soon',
    },
    {
      id: 5,
      title: 'B√≥i to√°n t√¨nh duy√™n',
      description: 'Ph√¢n t√≠ch v·ªÅ t√¨nh duy√™n v√† h√¥n nh√¢n',
      icon: 'üíï',
      status: 'coming_soon',
    },
    {
      id: 6,
      title: 'B√≥i to√°n s·ª± nghi·ªáp',
      description: 'D·ª± ƒëo√°n v·ªÅ c√¥ng vi·ªác v√† s·ª± nghi·ªáp',
      icon: 'üíº',
      status: 'coming_soon',
    },
    {
      id: 7,
      title: 'B√≥i to√°n t√†i l·ªôc',
      description: 'Ph√¢n t√≠ch v·ªÅ t√†i ch√≠nh v√† ƒë·∫ßu t∆∞',
      icon: 'üí∞',
      status: 'coming_soon',
    },
    {
      id: 8,
      title: 'B√≥i to√°n s·ª©c kh·ªèe',
      description: 'D·ª± ƒëo√°n v·ªÅ s·ª©c kh·ªèe v√† b·ªánh t·∫≠t',
      icon: 'üè•',
      status: 'coming_soon',
    },
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'available':
        return '#4CAF50';
      case 'coming_soon':
        return '#FF9800';
      default:
        return '#666';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'available':
        return 'C√≥ s·∫µn';
      case 'coming_soon':
        return 'S·∫Øp ra m·∫Øt';
      default:
        return 'Kh√¥ng kh·∫£ d·ª•ng';
    }
  };

  return (
    <ScrollView style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.headerTitle}>D·ªãch v·ª• b√≥i to√°n</Text>
        <Text style={styles.headerSubtitle}>
          Kh√°m ph√° c√°c d·ªãch v·ª• b√≥i to√°n t·ª≠ vi chuy√™n nghi·ªáp
        </Text>
      </View>

      <View style={styles.servicesContainer}>
        {services.map((service) => (
          <Card key={service.id} style={styles.serviceCard}>
            <Card.Content>
              <View style={styles.serviceHeader}>
                <Text style={styles.serviceIcon}>{service.icon}</Text>
                <View style={styles.serviceInfo}>
                  <Title style={styles.serviceTitle}>{service.title}</Title>
                  <Paragraph style={styles.serviceDescription}>
                    {service.description}
                  </Paragraph>
                </View>
              </View>
              
              <View style={styles.serviceFooter}>
                <Text style={[
                  styles.statusText,
                  { color: getStatusColor(service.status) }
                ]}>
                  {getStatusText(service.status)}
                </Text>
                
                {service.status === 'available' && (
                  <Button
                    mode="contained"
                    compact
                    style={styles.useButton}
                  >
                    S·ª≠ d·ª•ng
                  </Button>
                )}
              </View>
            </Card.Content>
          </Card>
        ))}
      </View>

      <Card style={styles.infoCard}>
        <Card.Content>
          <Title style={styles.infoTitle}>V·ªÅ d·ªãch v·ª• b√≥i to√°n</Title>
          <Paragraph style={styles.infoText}>
            ·ª®ng d·ª•ng s·ª≠ d·ª•ng c√¥ng ngh·ªá AI ti√™n ti·∫øn k·∫øt h·ª£p v·ªõi khoa h·ªçc t·ª≠ vi 
            truy·ªÅn th·ªëng ƒë·ªÉ ƒë∆∞a ra nh·ªØng d·ª± ƒëo√°n ch√≠nh x√°c v·ªÅ v·∫≠n m·ªánh c·ªßa b·∫°n.
          </Paragraph>
          <Paragraph style={styles.infoText}>
            C√°c d·ªãch v·ª• s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t th∆∞·ªùng xuy√™n ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám 
            b√≥i to√°n t·ªët nh·∫•t cho ng∆∞·ªùi d√πng.
          </Paragraph>
        </Card.Content>
      </Card>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
  },
  header: {
    padding: 20,
    backgroundColor: 'white',
    marginBottom: 16,
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#6200ee',
    marginBottom: 8,
  },
  headerSubtitle: {
    fontSize: 16,
    color: '#666',
    lineHeight: 24,
  },
  servicesContainer: {
    padding: 16,
  },
  serviceCard: {
    marginBottom: 16,
    elevation: 2,
  },
  serviceHeader: {
    flexDirection: 'row',
    marginBottom: 16,
  },
  serviceIcon: {
    fontSize: 32,
    marginRight: 16,
  },
  serviceInfo: {
    flex: 1,
  },
  serviceTitle: {
    fontSize: 18,
    marginBottom: 8,
  },
  serviceDescription: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
  },
  serviceFooter: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  statusText: {
    fontSize: 14,
    fontWeight: 'bold',
  },
  useButton: {
    borderRadius: 20,
  },
  infoCard: {
    margin: 16,
    elevation: 2,
  },
  infoTitle: {
    fontSize: 20,
    marginBottom: 16,
  },
  infoText: {
    fontSize: 14,
    lineHeight: 22,
    color: '#666',
    marginBottom: 12,
  },
});

export default ServicesScreen;
